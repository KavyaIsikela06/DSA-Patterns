/*
// Definition for a Node.
class Node {
    public int val;
    public Node prev;
    public Node next;
    public Node child;
};
*/

class Solution {
    public Node flatten(Node head) {
       if(head==null)
       return head;
       flattenDFS(head);
       return head; 
    }
    private Node flattenDFS(Node head){
        Node curr=head;
        Node last=null;
        while(curr!=null){
            Node next=curr.next;
            if(curr.child!=null){
                Node childhead=curr.child;
                Node childtail=flattenDFS(childhead);
                curr.next=childhead;
                childhead.prev=curr;
                if(next!=null){
                    childtail.next=next;
                    next.prev=childtail;
                }
                curr.child=null;
                last=childtail;
                curr=childtail;
            }else{
                last=curr;
            }
            curr=curr.next;
        }
            return last;
    }
}
